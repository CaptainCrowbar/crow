#include "crow/format-floating.hpp"
#include "crow/format-integer.hpp"
#include "crow/unit-test.hpp"

using namespace Crow;

void test_crow_format_integer_delimiters() {

    TEST_EQUAL(format_integer(0l,                   "na"),   "0");
    TEST_EQUAL(format_integer(123l,                 "na"),   "123");
    TEST_EQUAL(format_integer(1234l,                "na"),   "1'234");
    TEST_EQUAL(format_integer(12345l,               "na"),   "12'345");
    TEST_EQUAL(format_integer(123456l,              "na"),   "123'456");
    TEST_EQUAL(format_integer(1234567l,             "na"),   "1'234'567");
    TEST_EQUAL(format_integer(12345678l,            "na"),   "12'345'678");
    TEST_EQUAL(format_integer(123456789l,           "na"),   "123'456'789");
    TEST_EQUAL(format_integer(1234567890l,          "na"),   "1'234'567'890");
    TEST_EQUAL(format_integer(-123l,                "na"),   "-123");
    TEST_EQUAL(format_integer(-1234l,               "na"),   "-1'234");
    TEST_EQUAL(format_integer(-12345l,              "na"),   "-12'345");
    TEST_EQUAL(format_integer(-123456l,             "na"),   "-123'456");
    TEST_EQUAL(format_integer(-1234567l,            "na"),   "-1'234'567");
    TEST_EQUAL(format_integer(-12345678l,           "na"),   "-12'345'678");
    TEST_EQUAL(format_integer(-123456789l,          "na"),   "-123'456'789");
    TEST_EQUAL(format_integer(-1234567890l,         "na"),   "-1'234'567'890");
    TEST_EQUAL(format_integer(0l,                   "NA"),   "0");
    TEST_EQUAL(format_integer(12345l,               "NA"),   "12345");
    TEST_EQUAL(format_integer(123456l,              "NA"),   "1'23456");
    TEST_EQUAL(format_integer(1234567l,             "NA"),   "12'34567");
    TEST_EQUAL(format_integer(12345678l,            "NA"),   "123'45678");
    TEST_EQUAL(format_integer(123456789l,           "NA"),   "1234'56789");
    TEST_EQUAL(format_integer(1234567890l,          "NA"),   "12345'67890");
    TEST_EQUAL(format_integer(12345678901l,         "NA"),   "1'23456'78901");
    TEST_EQUAL(format_integer(123l,                 "nc"),   "123");
    TEST_EQUAL(format_integer(123456l,              "nc"),   "123,456");
    TEST_EQUAL(format_integer(1234567890l,          "nc"),   "1,234,567,890");
    TEST_EQUAL(format_integer(12345l,               "NC"),   "12345");
    TEST_EQUAL(format_integer(12345678l,            "NC"),   "123,45678");
    TEST_EQUAL(format_integer(12345678901l,         "NC"),   "1,23456,78901");
    TEST_EQUAL(format_integer(123l,                 "nu"),   "123");
    TEST_EQUAL(format_integer(123456l,              "nu"),   "123_456");
    TEST_EQUAL(format_integer(1234567890l,          "nu"),   "1_234_567_890");
    TEST_EQUAL(format_integer(12345l,               "NU"),   "12345");
    TEST_EQUAL(format_integer(12345678l,            "NU"),   "123_45678");
    TEST_EQUAL(format_integer(12345678901l,         "NU"),   "1_23456_78901");
    TEST_EQUAL(format_integer(123l,                 "nw"),   "123");
    TEST_EQUAL(format_integer(123456l,              "nw"),   "123 456");
    TEST_EQUAL(format_integer(1234567890l,          "nw"),   "1 234 567 890");
    TEST_EQUAL(format_integer(12345l,               "NW"),   "12345");
    TEST_EQUAL(format_integer(12345678l,            "NW"),   "123 45678");
    TEST_EQUAL(format_integer(12345678901l,         "NW"),   "1 23456 78901");
    TEST_EQUAL(format_integer(0ul,                  "xa"),   "0");
    TEST_EQUAL(format_integer(0x1234ul,             "xa"),   "1234");
    TEST_EQUAL(format_integer(0x12345ul,            "xa"),   "1'2345");
    TEST_EQUAL(format_integer(0x123456ul,           "xa"),   "12'3456");
    TEST_EQUAL(format_integer(0x1234567ul,          "xa"),   "123'4567");
    TEST_EQUAL(format_integer(0x12345678ul,         "xa"),   "1234'5678");
    TEST_EQUAL(format_integer(0x123456789ul,        "xa"),   "1'2345'6789");
    TEST_EQUAL(format_integer(0x123456789aul,       "xa"),   "12'3456'789a");
    TEST_EQUAL(format_integer(0x123456789abul,      "xa"),   "123'4567'89ab");
    TEST_EQUAL(format_integer(0x123456789abcul,     "xa"),   "1234'5678'9abc");
    TEST_EQUAL(format_integer(0x123456789abcdul,    "xa"),   "1'2345'6789'abcd");
    TEST_EQUAL(format_integer(0x123456789abcdeul,   "xa"),   "12'3456'789a'bcde");
    TEST_EQUAL(format_integer(0x123456789abcdeful,  "xa"),   "123'4567'89ab'cdef");
    TEST_EQUAL(format_integer(0x1234ul,             "XA"),   "1234");
    TEST_EQUAL(format_integer(0x1234567ul,          "XA"),   "123'4567");
    TEST_EQUAL(format_integer(0x123456789abcul,     "XA"),   "1234'5678'9ABC");
    TEST_EQUAL(format_integer(0x123456789abcdeful,  "XA"),   "123'4567'89AB'CDEF");
    TEST_EQUAL(format_integer(0x1234ul,             "xc"),   "1234");
    TEST_EQUAL(format_integer(0x1234567ul,          "xc"),   "123,4567");
    TEST_EQUAL(format_integer(0x123456789abcul,     "xc"),   "1234,5678,9abc");
    TEST_EQUAL(format_integer(0x123456789abcdeful,  "xc"),   "123,4567,89ab,cdef");
    TEST_EQUAL(format_integer(0x1234ul,             "xu"),   "1234");
    TEST_EQUAL(format_integer(0x1234567ul,          "xu"),   "123_4567");
    TEST_EQUAL(format_integer(0x123456789abcul,     "xu"),   "1234_5678_9abc");
    TEST_EQUAL(format_integer(0x123456789abcdeful,  "xu"),   "123_4567_89ab_cdef");
    TEST_EQUAL(format_integer(0x1234ul,             "xw"),   "1234");
    TEST_EQUAL(format_integer(0x1234567ul,          "xw"),   "123 4567");
    TEST_EQUAL(format_integer(0x123456789abcul,     "xw"),   "1234 5678 9abc");
    TEST_EQUAL(format_integer(0x123456789abcdeful,  "xw"),   "123 4567 89ab cdef");
    TEST_EQUAL(format_integer(0l,                   "naE"),  "0");
    TEST_EQUAL(format_integer(123l,                 "naE"),  "123");
    TEST_EQUAL(format_integer(1234l,                "naE"),  "1234");
    TEST_EQUAL(format_integer(12345l,               "naE"),  "12'345");
    TEST_EQUAL(format_integer(123456l,              "naE"),  "123'456");
    TEST_EQUAL(format_integer(0x1234ul,             "xaE"),  "1234");
    TEST_EQUAL(format_integer(0x12345ul,            "xaE"),  "12345");
    TEST_EQUAL(format_integer(0x123456ul,           "xaE"),  "12'3456");

}

void test_crow_format_floating_point_delimiters() {

    TEST_EQUAL(format_floating_point(0.000012345678,  "da8"),   "0.000'012'345'678");
    TEST_EQUAL(format_floating_point(0.00012345678,   "da8"),   "0.000'123'456'78");
    TEST_EQUAL(format_floating_point(0.0012345678,    "da8"),   "0.001'234'567'8");
    TEST_EQUAL(format_floating_point(0.012345678,     "da8"),   "0.012'345'678");
    TEST_EQUAL(format_floating_point(0.12345678,      "da8"),   "0.123'456'78");
    TEST_EQUAL(format_floating_point(1.2345678,       "da8"),   "1.234'567'8");
    TEST_EQUAL(format_floating_point(12.345678,       "da8"),   "12.345'678");
    TEST_EQUAL(format_floating_point(123.45678,       "da8"),   "123.456'78");
    TEST_EQUAL(format_floating_point(1234.5678,       "da8"),   "1'234.567'8");
    TEST_EQUAL(format_floating_point(12345.678,       "da8"),   "12'345.678");
    TEST_EQUAL(format_floating_point(123456.78,       "da8"),   "123'456.78");
    TEST_EQUAL(format_floating_point(1234567.8,       "da8"),   "1'234'567.8");
    TEST_EQUAL(format_floating_point(12345678,        "da8"),   "12'345'678");
    TEST_EQUAL(format_floating_point(123456780,       "da8"),   "123'456'780");
    TEST_EQUAL(format_floating_point(1234567800,      "da8"),   "1'234'567'800");
    TEST_EQUAL(format_floating_point(12345678000,     "da8"),   "12'345'678'000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "ea8"),   "1.234'567'8e-5");
    TEST_EQUAL(format_floating_point(0.00012345678,   "ea8"),   "1.234'567'8e-4");
    TEST_EQUAL(format_floating_point(0.0012345678,    "ea8"),   "1.234'567'8e-3");
    TEST_EQUAL(format_floating_point(0.012345678,     "ea8"),   "1.234'567'8e-2");
    TEST_EQUAL(format_floating_point(0.12345678,      "ea8"),   "1.234'567'8e-1");
    TEST_EQUAL(format_floating_point(1.2345678,       "ea8"),   "1.234'567'8e0");
    TEST_EQUAL(format_floating_point(12.345678,       "ea8"),   "1.234'567'8e1");
    TEST_EQUAL(format_floating_point(123.45678,       "ea8"),   "1.234'567'8e2");
    TEST_EQUAL(format_floating_point(1234.5678,       "ea8"),   "1.234'567'8e3");
    TEST_EQUAL(format_floating_point(12345.678,       "ea8"),   "1.234'567'8e4");
    TEST_EQUAL(format_floating_point(123456.78,       "ea8"),   "1.234'567'8e5");
    TEST_EQUAL(format_floating_point(1234567.8,       "ea8"),   "1.234'567'8e6");
    TEST_EQUAL(format_floating_point(12345678,        "ea8"),   "1.234'567'8e7");
    TEST_EQUAL(format_floating_point(123456780,       "ea8"),   "1.234'567'8e8");
    TEST_EQUAL(format_floating_point(1234567800,      "ea8"),   "1.234'567'8e9");
    TEST_EQUAL(format_floating_point(12345678000,     "ea8"),   "1.234'567'8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "fa4"),   "0.000'0");
    TEST_EQUAL(format_floating_point(0.00012345678,   "fa4"),   "0.000'1");
    TEST_EQUAL(format_floating_point(0.0012345678,    "fa4"),   "0.001'2");
    TEST_EQUAL(format_floating_point(0.012345678,     "fa4"),   "0.012'3");
    TEST_EQUAL(format_floating_point(0.12345678,      "fa4"),   "0.123'5");
    TEST_EQUAL(format_floating_point(1.2345678,       "fa4"),   "1.234'6");
    TEST_EQUAL(format_floating_point(12.345678,       "fa4"),   "12.345'7");
    TEST_EQUAL(format_floating_point(123.45678,       "fa4"),   "123.456'8");
    TEST_EQUAL(format_floating_point(1234.5678,       "fa4"),   "1'234.567'8");
    TEST_EQUAL(format_floating_point(12345.678,       "fa4"),   "12'345.678'0");
    TEST_EQUAL(format_floating_point(123456.78,       "fa4"),   "123'456.780'0");
    TEST_EQUAL(format_floating_point(1234567.8,       "fa4"),   "1'234'567.800'0");
    TEST_EQUAL(format_floating_point(12345678,        "fa4"),   "12'345'678.000'0");
    TEST_EQUAL(format_floating_point(123456780,       "fa4"),   "123'456'780.000'0");
    TEST_EQUAL(format_floating_point(1234567800,      "fa4"),   "1'234'567'800.000'0");
    TEST_EQUAL(format_floating_point(12345678000,     "fa4"),   "12'345'678'000.000'0");
    TEST_EQUAL(format_floating_point(0.000012345678,  "ga8"),   "1.234'567'8e-5");
    TEST_EQUAL(format_floating_point(0.00012345678,   "ga8"),   "1.234'567'8e-4");
    TEST_EQUAL(format_floating_point(0.0012345678,    "ga8"),   "0.001'234'567'8");
    TEST_EQUAL(format_floating_point(0.012345678,     "ga8"),   "0.012'345'678");
    TEST_EQUAL(format_floating_point(0.12345678,      "ga8"),   "0.123'456'78");
    TEST_EQUAL(format_floating_point(1.2345678,       "ga8"),   "1.234'567'8");
    TEST_EQUAL(format_floating_point(12.345678,       "ga8"),   "12.345'678");
    TEST_EQUAL(format_floating_point(123.45678,       "ga8"),   "123.456'78");
    TEST_EQUAL(format_floating_point(1234.5678,       "ga8"),   "1'234.567'8");
    TEST_EQUAL(format_floating_point(12345.678,       "ga8"),   "12'345.678");
    TEST_EQUAL(format_floating_point(123456.78,       "ga8"),   "123'456.78");
    TEST_EQUAL(format_floating_point(1234567.8,       "ga8"),   "1.234'567'8e6");
    TEST_EQUAL(format_floating_point(12345678,        "ga8"),   "1.234'567'8e7");
    TEST_EQUAL(format_floating_point(123456780,       "ga8"),   "1.234'567'8e8");
    TEST_EQUAL(format_floating_point(1234567800,      "ga8"),   "1.234'567'8e9");
    TEST_EQUAL(format_floating_point(12345678000,     "ga8"),   "1.234'567'8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "DA8"),   "0.00001'23456'78");
    TEST_EQUAL(format_floating_point(1.2345678,       "DA8"),   "1.23456'78");
    TEST_EQUAL(format_floating_point(123456.78,       "DA8"),   "1'23456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "DA8"),   "1'23456'78000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "EA8"),   "1.23456'78E-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "EA8"),   "1.23456'78E0");
    TEST_EQUAL(format_floating_point(123456.78,       "EA8"),   "1.23456'78E5");
    TEST_EQUAL(format_floating_point(12345678000,     "EA8"),   "1.23456'78E10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "FA4"),   "0.0000");
    TEST_EQUAL(format_floating_point(1.2345678,       "FA4"),   "1.2346");
    TEST_EQUAL(format_floating_point(123456.78,       "FA4"),   "1'23456.7800");
    TEST_EQUAL(format_floating_point(12345678000,     "FA4"),   "1'23456'78000.0000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "GA8"),   "1.23456'78E-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "GA8"),   "1.23456'78");
    TEST_EQUAL(format_floating_point(123456.78,       "GA8"),   "1'23456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "GA8"),   "1.23456'78E10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "dc8"),   "0.000,012,345,678");
    TEST_EQUAL(format_floating_point(1.2345678,       "dc8"),   "1.234,567,8");
    TEST_EQUAL(format_floating_point(123456.78,       "dc8"),   "123,456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "dc8"),   "12,345,678,000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "ec8"),   "1.234,567,8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "ec8"),   "1.234,567,8e0");
    TEST_EQUAL(format_floating_point(123456.78,       "ec8"),   "1.234,567,8e5");
    TEST_EQUAL(format_floating_point(12345678000,     "ec8"),   "1.234,567,8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "fc4"),   "0.000,0");
    TEST_EQUAL(format_floating_point(1.2345678,       "fc4"),   "1.234,6");
    TEST_EQUAL(format_floating_point(123456.78,       "fc4"),   "123,456.780,0");
    TEST_EQUAL(format_floating_point(12345678000,     "fc4"),   "12,345,678,000.000,0");
    TEST_EQUAL(format_floating_point(0.000012345678,  "gc8"),   "1.234,567,8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "gc8"),   "1.234,567,8");
    TEST_EQUAL(format_floating_point(123456.78,       "gc8"),   "123,456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "gc8"),   "1.234,567,8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "du8"),   "0.000_012_345_678");
    TEST_EQUAL(format_floating_point(1.2345678,       "du8"),   "1.234_567_8");
    TEST_EQUAL(format_floating_point(123456.78,       "du8"),   "123_456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "du8"),   "12_345_678_000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "eu8"),   "1.234_567_8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "eu8"),   "1.234_567_8e0");
    TEST_EQUAL(format_floating_point(123456.78,       "eu8"),   "1.234_567_8e5");
    TEST_EQUAL(format_floating_point(12345678000,     "eu8"),   "1.234_567_8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "fu4"),   "0.000_0");
    TEST_EQUAL(format_floating_point(1.2345678,       "fu4"),   "1.234_6");
    TEST_EQUAL(format_floating_point(123456.78,       "fu4"),   "123_456.780_0");
    TEST_EQUAL(format_floating_point(12345678000,     "fu4"),   "12_345_678_000.000_0");
    TEST_EQUAL(format_floating_point(0.000012345678,  "gu8"),   "1.234_567_8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "gu8"),   "1.234_567_8");
    TEST_EQUAL(format_floating_point(123456.78,       "gu8"),   "123_456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "gu8"),   "1.234_567_8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "dw8"),   "0.000 012 345 678");
    TEST_EQUAL(format_floating_point(1.2345678,       "dw8"),   "1.234 567 8");
    TEST_EQUAL(format_floating_point(123456.78,       "dw8"),   "123 456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "dw8"),   "12 345 678 000");
    TEST_EQUAL(format_floating_point(0.000012345678,  "ew8"),   "1.234 567 8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "ew8"),   "1.234 567 8e0");
    TEST_EQUAL(format_floating_point(123456.78,       "ew8"),   "1.234 567 8e5");
    TEST_EQUAL(format_floating_point(12345678000,     "ew8"),   "1.234 567 8e10");
    TEST_EQUAL(format_floating_point(0.000012345678,  "fw4"),   "0.000 0");
    TEST_EQUAL(format_floating_point(1.2345678,       "fw4"),   "1.234 6");
    TEST_EQUAL(format_floating_point(123456.78,       "fw4"),   "123 456.780 0");
    TEST_EQUAL(format_floating_point(12345678000,     "fw4"),   "12 345 678 000.000 0");
    TEST_EQUAL(format_floating_point(0.000012345678,  "gw8"),   "1.234 567 8e-5");
    TEST_EQUAL(format_floating_point(1.2345678,       "gw8"),   "1.234 567 8");
    TEST_EQUAL(format_floating_point(123456.78,       "gw8"),   "123 456.78");
    TEST_EQUAL(format_floating_point(12345678000,     "gw8"),   "1.234 567 8e10");
    TEST_EQUAL(format_floating_point(123.45678,       "daE8"),  "123.456'78");
    TEST_EQUAL(format_floating_point(1234.5678,       "daE8"),  "1234.5678");
    TEST_EQUAL(format_floating_point(12345.678,       "daE8"),  "12'345.678");

}
